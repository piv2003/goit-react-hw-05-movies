{"version":3,"file":"static/js/670.9eb3a265.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/ScrollToTopButton/ScrollToTopButton.styled.jsx","components/ScrollToTopButton/ScrollToTopButton.jsx","components/Skeleton/Skeleton.js","components/Home/Home.styled.jsx","pages/Home.jsx","../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  padding: 0 0 20px 0;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border: solid 1px #ac04ac;\n  border-radius: 25px;\n  box-shadow: 7px 7px 7px #0000004d, -23px 0 20px -23px #000c,\n    23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: 0 1px 4px #0000004d, -23px 0 20px -23px #000c,\n      23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n  }\n\n  & a {\n    color: #000000;\n    transition: color 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    & div {\n      text-align: center;\n      width: 250px;\n      height: 460px;\n\n      & span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 376px;\n        border-bottom: solid 1px black;\n        font-size: 30px;\n      }\n      & img {\n        margin-bottom: 5px;\n        border-bottom: solid 1px black;\n      }\n    }\n\n    & b {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px;\n      font-size: 16px;\n    }\n  }\n\n  &:hover > a {\n    color: red;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, List } from './MovieList.styled';\nimport ScrollToTopButton from '../ScrollToTopButton/ScrollToTopButton';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      <ScrollToTopButton />\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <div>\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={`Poster ${title}`}\n                  width=\"250px\"\n                  height=\"375px\"\n                />\n              ) : (\n                <span>No poster</span>\n              )}\n              <b>{title}</b>\n            </div>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const ScrollButton = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: radial-gradient(circle, #ff98a0, #fa47c4);\n  color: #fff;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 20px;\n  transition: background 0.5s ease, transform 0.5s ease;\n\n  &:hover {\n    background: radial-gradient(circle, #ffa9a1, #af0292);\n    transform: scale(1.1);\n  }\n\n  &:active {\n    animation: clickEffect 0.2s linear;\n  }\n\n  @keyframes clickEffect {\n    0% {\n      transform: scale(1);\n      background: radial-gradient(circle, #ffa9a1, #ff98a0);\n    }\n    50% {\n      transform: scale(0.95);\n      background: radial-gradient(circle, #ff98a0, #fa47c4);\n    }\n    100% {\n      transform: scale(1);\n      background: radial-gradient(circle, #ffa9a1, #ff98a0);\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { FaArrowUp } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { ScrollButton } from './ScrollToTopButton.styled';\n\nconst ScrollToTopButton = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div>\n      {isVisible && (\n        <ScrollButton onClick={scrollToTop}>\n          <FaArrowUp />\n        </ScrollButton>\n      )}\n    </div>\n  );\n};\n\nScrollToTopButton.propTypes = {\n  isVisible: PropTypes.bool,\n};\n\nexport default ScrollToTopButton;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst Skeleton = ({ ...props }) => {\n  const rowCount = 4; // Number of rows\n  const columnCount = 5; // Number of columns\n  const rectWidth = 250;\n  const rectHeight = 360;\n  const rectSpacingX = 265; //Horizontal spacing between rectangles\n  const rectSpacingY = 375; //Vertical spacing between rectangles\n  const rectanglesCount = rowCount * columnCount;\n\n  const generateRectangles = () =>\n    Array.from({ length: rectanglesCount }, (_, index) => {\n      const x = (index % columnCount) * rectSpacingX + 20;\n      const y = Math.floor(index / columnCount) * rectSpacingY + 20;\n\n      return (\n        <rect\n          key={index}\n          x={x}\n          y={y}\n          rx={0}\n          ry={0}\n          width={rectWidth}\n          height={rectHeight}\n        />\n      );\n    });\n\n  return (\n    <ContentLoader\n      speed={2}\n      width={1400}\n      height={2000}\n      viewBox=\"0 0 1400 2000\"\n      backgroundColor=\"#d9d9d9\"\n      foregroundColor=\"#fbfbfb\"\n      {...props}\n    >\n      {generateRectangles()}\n    </ContentLoader>\n  );\n};\n\nexport default Skeleton;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  -webkit-text-stroke: 2px #fa47c4;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  font-size: 35px;\n  letter-spacing: 2px;\n  font-weight: 900;\n  color: #130ff3;\n  text-shadow: 1px 3px 3px rgba(0, 0, 0, 0.55);\n  background-color: #fc73da;\n\n  @-webkit-keyframes pulsate {\n    50% {\n      color: #fff;\n      text-shadow: 0 -1px rgba(0, 0, 0, 0.3), 0 0 5px #ffd, 0 0 8px #fff;\n    }\n  }\n  @keyframes pulsate {\n    50% {\n      color: #fff;\n      text-shadow: 0 -1px rgba(0, 0, 0, 0.3), 0 0 5px #ffd, 0 0 8px #fff;\n    }\n  }\n  color: rgb(10, 10, 10);\n  text-shadow: 0 -1px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(white, #ffa9a1);\n  -webkit-animation: pulsate 2.2s linear infinite;\n  animation: pulsate 2.2s linear infinite;\n`;\n","import { useState, useEffect } from 'react';\nimport MovieList from '../components/MovieList/MovieList';\nimport { getTrendingMovies } from '../components/App/App';\nimport Skeleton from '../components/Skeleton/Skeleton';\nimport ScrollToTopButton from '../components/ScrollToTopButton/ScrollToTopButton';\nimport { Title } from '../components/Home/Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTrendingMovies()\n      .then(data => {\n        setTrendingMovies(data);\n        setIsLoading(false);\n      })\n      .catch(console.log);\n  }, []);\n\n  return (\n    <>\n      <ScrollToTopButton />\n      <Title>Trending today</Title>\n      {isLoading ? <Skeleton /> : <MovieList movies={trendingMovies} />}\n    </>\n  );\n};\n\nexport default Home;\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  animateBegin,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  gradientDirection = 'left-right',\n  uniqueKey,\n  interval = 0.25,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","movies","location","useLocation","_jsxs","children","_jsx","ScrollToTopButton","map","_ref2","id","title","poster_path","Link","to","concat","state","from","src","alt","width","height","ScrollButton","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","window","pageYOffset","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","FaArrowUp","props","Object","assign","_objectDestructuringEmpty","ContentLoader","_objectSpread","speed","viewBox","backgroundColor","foregroundColor","Array","length","rowCount","_","index","x","y","Math","floor","rx","ry","Title","trendingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setIsLoading","getTrendingMovies","then","data","catch","console","log","_Fragment","Skeleton","MovieList","SVG","_a","_b","animate","animateBegin","_c","_d","backgroundOpacity","_e","baseUrl","_f","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","_o","style","_p","_q","beforeMask","__rest","fixedId","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","createElement","__assign","role","isValidElement","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ReactContentLoaderFacebook","cx","cy","r","obj","TypeError"],"sourceRoot":""}