{"version":3,"file":"static/js/736.25ffe42a.chunk.js","mappings":"0OAEaA,E,QAAOC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mkC,mBCsC7B,EAlCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAQxB,OANAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,EAAS,WACtBU,MAAK,SAAAC,GAAO,OAAIJ,EAAUI,EAAQC,KAAK,IACvCC,MAAMC,QAAQC,IACnB,GAAG,CAACf,KAGFgB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACvB,EAAI,CAAAsB,SAAA,EACHF,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,IACjBd,EAAOe,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACII,EAAMC,cAGNP,EAAAA,EAAAA,KAAA,OACEQ,IAAG,kCAAAC,OAAoCH,EAAMC,cAC7CG,IAAKJ,EAAMK,KACXC,MAAM,SALRZ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAQRF,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAMK,QACVX,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAMO,cAXHP,EAAMQ,QAYV,QAKf,C,oGCpCaC,E,QAAelC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,63B,SCuCtC,EArC0B,WACxB,IAAAG,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1C8B,EAAS5B,EAAA,GAAE6B,EAAY7B,EAAA,IAE9BI,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAAe,WACfC,OAAOC,YAAc,IACvBH,GAAa,GAEbA,GAAa,EAEjB,EAIA,OAFAE,OAAOE,iBAAiB,SAAUH,GAE3B,WACLC,OAAOG,oBAAoB,SAAUJ,EACvC,CACF,GAAG,IASH,OACElB,EAAAA,EAAAA,KAAA,OAAAE,SACGc,IACChB,EAAAA,EAAAA,KAACe,EAAY,CAACQ,QAVA,WAClBJ,OAAOK,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,EAKyCxB,UACjCF,EAAAA,EAAAA,KAAC2B,EAAAA,IAAS,OAKpB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ScrollToTopButton/ScrollToTopButton.styled.jsx","components/ScrollToTopButton/ScrollToTopButton.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n  padding: 15px;\n\n  & li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 5px;\n    width: 200px;\n    border: solid 1px #5c048f;\n    border-radius: 35px;\n    box-shadow: 5px 5px 5px #0000004d, -12px 5px 20px -23px #000c,\n      23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n\n    & img {\n      margin-right: auto;\n      margin-left: auto;\n      margin-top: 15%;\n      border-radius: 15%;\n      box-shadow: 0 1px 4px #0000004d, -23px 0 20px -23px #000c,\n        23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n    }\n    & span {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100px;\n      height: 150px;\n      border: solid 1px black;\n      background-color: grey;\n    }\n    & p {\n      padding: 5px;\n      text-align: center;\n      font-size: 16px;\n      height: 50px;\n    }\n\n    & b {\n      text-align: center;\n      font-size: 16px;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../App/App';\nimport { List } from './Cast.styled';\nimport ScrollToTopButton from '../ScrollToTopButton/ScrollToTopButton';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    getMovieDetails(movieId, 'credits')\n      .then(credits => setActors(credits.cast))\n      .catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      <List>\n        <ScrollToTopButton />\n        {actors.map(actor => (\n          <li key={actor.cast_id}>\n            {!actor.profile_path ? (\n              <span>No photo</span>\n            ) : (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                alt={actor.name}\n                width=\"100\"\n              />\n            )}\n            <b>{actor.name}</b>\n            <p>{actor.character}</p>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ScrollButton = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: radial-gradient(circle, #ff98a0, #fa47c4);\n  color: #fff;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 20px;\n  transition: background 0.5s ease, transform 0.5s ease;\n\n  &:hover {\n    background: radial-gradient(circle, #ffa9a1, #af0292);\n    transform: scale(1.1);\n  }\n\n  &:active {\n    animation: clickEffect 0.2s linear;\n  }\n\n  @keyframes clickEffect {\n    0% {\n      transform: scale(1);\n      background: radial-gradient(circle, #ffa9a1, #ff98a0);\n    }\n    50% {\n      transform: scale(0.95);\n      background: radial-gradient(circle, #ff98a0, #fa47c4);\n    }\n    100% {\n      transform: scale(1);\n      background: radial-gradient(circle, #ffa9a1, #ff98a0);\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { FaArrowUp } from 'react-icons/fa';\nimport { ScrollButton } from './ScrollToTopButton.styled';\n\nconst ScrollToTopButton = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div>\n      {isVisible && (\n        <ScrollButton onClick={scrollToTop}>\n          <FaArrowUp />\n        </ScrollButton>\n      )}\n    </div>\n  );\n};\n\nexport default ScrollToTopButton;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","useEffect","getMovieDetails","then","credits","cast","catch","console","log","_jsx","_Fragment","children","_jsxs","ScrollToTopButton","map","actor","profile_path","src","concat","alt","name","width","character","cast_id","ScrollButton","isVisible","setIsVisible","handleScroll","window","pageYOffset","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","FaArrowUp"],"sourceRoot":""}