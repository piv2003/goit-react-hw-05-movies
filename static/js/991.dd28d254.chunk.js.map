{"version":3,"file":"static/js/991.dd28d254.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/ScrollToTopButton/ScrollToTopButton.styled.jsx","components/ScrollToTopButton/ScrollToTopButton.jsx","components/Skeleton/Skeleton.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  padding: 0 0 20px 0;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border: solid 1px #ac04ac;\n  border-radius: 25px;\n  box-shadow: 7px 7px 7px #0000004d, -23px 0 20px -23px #000c,\n    23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: 0 1px 4px #0000004d, -23px 0 20px -23px #000c,\n      23px 0 20px -23px #000c, inset 0 0 40px #0000001a;\n  }\n\n  & a {\n    color: #000000;\n    transition: color 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    & div {\n      text-align: center;\n      width: 250px;\n      height: 460px;\n\n      & span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 376px;\n        border-bottom: solid 1px black;\n        font-size: 30px;\n      }\n      & img {\n        margin-bottom: 5px;\n        border-bottom: solid 1px black;\n      }\n    }\n\n    & b {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px;\n      font-size: 16px;\n    }\n  }\n\n  &:hover > a {\n    color: red;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, List } from './MovieList.styled';\nimport ScrollToTopButton from '../ScrollToTopButton/ScrollToTopButton';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      <ScrollToTopButton />\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <div>\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={`Poster ${title}`}\n                  width=\"250px\"\n                  height=\"375px\"\n                />\n              ) : (\n                <span>No poster</span>\n              )}\n              <b>{title}</b>\n            </div>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const ScrollButton = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: radial-gradient(circle, #ff98a0, #fa47c4);\n  color: #fff;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 20px;\n  transition: background 0.5s ease, transform 0.5s ease;\n\n  &:hover {\n    background: radial-gradient(circle, #ffa9a1, #af0292);\n    transform: scale(1.1);\n  }\n\n  &:active {\n    animation: clickEffect 0.2s linear;\n  }\n\n  @keyframes clickEffect {\n    0% {\n      transform: scale(1);\n      background: radial-gradient(circle, #ffa9a1, #ff98a0);\n    }\n    50% {\n      transform: scale(0.95);\n      background: radial-gradient(circle, #ff98a0, #fa47c4);\n    }\n    100% {\n      transform: scale(1);\n      background: radial-gradient(circle, #ffa9a1, #ff98a0);\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { FaArrowUp } from 'react-icons/fa';\nimport { ScrollButton } from './ScrollToTopButton.styled';\n\nconst ScrollToTopButton = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.pageYOffset > 300) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div>\n      {isVisible && (\n        <ScrollButton onClick={scrollToTop}>\n          <FaArrowUp />\n        </ScrollButton>\n      )}\n    </div>\n  );\n};\n\nexport default ScrollToTopButton;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst Skeleton = ({ ...props }) => {\n  const rowCount = 4; // Number of rows\n  const columnCount = 5; // Number of columns\n  const rectWidth = 250;\n  const rectHeight = 360;\n  const rectSpacingX = 265; //Horizontal spacing between rectangles\n  const rectSpacingY = 375; //Vertical spacing between rectangles\n  const rectanglesCount = rowCount * columnCount;\n\n  const generateRectangles = () =>\n    Array.from({ length: rectanglesCount }, (_, index) => {\n      const x = (index % columnCount) * rectSpacingX + 20;\n      const y = Math.floor(index / columnCount) * rectSpacingY + 20;\n\n      return (\n        <rect\n          key={index}\n          x={x}\n          y={y}\n          rx={0}\n          ry={0}\n          width={rectWidth}\n          height={rectHeight}\n        />\n      );\n    });\n\n  return (\n    <ContentLoader\n      speed={2}\n      width={1400}\n      height={2000}\n      viewBox=\"0 0 1400 2000\"\n      backgroundColor=\"#d9d9d9\"\n      foregroundColor=\"#fbfbfb\"\n      {...props}\n    >\n      {generateRectangles()}\n    </ContentLoader>\n  );\n};\n\nexport default Skeleton;\n","import styled from 'styled-components';\n\nexport const SearchBox = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 12px 24px;\n  background: radial-gradient(white, #7774d1);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.1),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  width: 100%;\n  max-width: 555px;\n  background-color: #fff;\n  border-radius: 3px;\n`;\n\nexport const SearchButton = styled.button`\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.4;\n  cursor: pointer;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    opacity: 1;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const SearchbarInput = styled.input`\n  width: 100%;\n  font-size: 20px;\n  border: none;\n  border-radius: 20px;\n  outline: none;\n  padding-left: 14px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font-size: 18px;\n  }\n`;\n","import { GoSearch } from 'react-icons/go';\nimport PropTypes from 'prop-types';\nimport {\n  SearchBox,\n  SearchForm,\n  SearchButton,\n  SearchbarInput,\n} from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  return (\n    <SearchBox>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchButton>\n          <GoSearch />\n        </SearchButton>\n        <SearchbarInput\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies, please enter your request\"\n        />\n      </SearchForm>\n    </SearchBox>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getSearchMovie } from '../components/App/App';\nimport { Notification } from '../components/NotFound/NotFound.styled';\nimport MovieList from '../components/MovieList/MovieList';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport Skeleton from '../components/Skeleton/Skeleton';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searched, setSearched] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const movieName = searchParams.get('query') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setNoResults(false);\n      if (movieName) {\n        setIsLoading(true);\n        setSearched(true);\n        try {\n          const movies = await getSearchMovie(movieName);\n          setMovies(movies);\n          setNoResults(movies.length === 0);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    }\n\n    fetchMovies();\n  }, [movieName]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const query = evt.target.name.value;\n\n    if (query === '') {\n      toast.error('Please enter your request');\n      return;\n    }\n\n    setSearchParams({ query });\n    evt.target.name.value = '';\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {searched && (\n        <>\n          {noResults ? (\n            <Notification>No results found for your search query</Notification>\n          ) : (\n            <>{isLoading ? <Skeleton /> : <MovieList movies={movies} />}</>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","movies","location","useLocation","_jsxs","children","_jsx","ScrollToTopButton","map","_ref2","id","title","poster_path","Link","to","concat","state","from","src","alt","width","height","ScrollButton","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","window","pageYOffset","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","FaArrowUp","props","Object","assign","_objectDestructuringEmpty","ContentLoader","_objectSpread","speed","viewBox","backgroundColor","foregroundColor","Array","length","rowCount","_","index","x","y","Math","floor","rx","ry","SearchBox","SearchForm","SearchButton","_templateObject3","SearchbarInput","_templateObject4","onSubmit","GoSearch","type","name","autoComplete","autoFocus","placeholder","_searchParams$get","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","searched","setSearched","_useState5","_useState6","noResults","setNoResults","movieName","get","_useState7","_useState8","isLoading","setIsLoading","_fetchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_movies","wrap","_context","prev","next","getSearchMovie","sent","t0","console","log","finish","stop","apply","arguments","fetchMovies","_Fragment","SearchBar","evt","preventDefault","query","target","value","toast","Notification","Skeleton","MovieList"],"sourceRoot":""}